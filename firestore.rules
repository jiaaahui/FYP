rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Function to check if the user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Function to check if the user is accessing their own data
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Function to check if the user has admin role
    function isAdmin() {
      return request.auth.token.admin == true;
    }
    
    // Users collection
    match /users/{userId} {
      // Allow read if the user is authenticated and is the owner of the document
      // or if the user is an admin
      allow read: if isAuthenticated() && (isOwner(userId) || isAdmin());
      
      // Allow write if the user is authenticated and is the owner of the document
      allow create, update: if isAuthenticated() && isOwner(userId);
      
      // Only admins can delete user profiles
      allow delete: if isAuthenticated() && isAdmin();
    }
    
    // Public data collection - can be read by anyone but only written by admins
    match /publicData/{document=**} {
      allow read: if true;
      allow write: if isAuthenticated() && isAdmin();
    }
    
    // Protected data collection - can only be accessed by authenticated users
    match /protectedData/{document=**} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isAdmin();
    }
    
    // User-specific data collection - users can only access their own data
    match /userData/{userId}/{document=**} {
      allow read, write: if isAuthenticated() && isOwner(userId);
      allow read, write: if isAuthenticated() && isAdmin();
    }
  }
}