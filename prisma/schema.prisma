generator client {
  provider = "prisma-client-js"
  output = "./generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model building {
  buildingid              String    @id @db.VarChar(50)
  buildingname            String?   @db.VarChar(255)
  housingtype             String?   @db.VarChar(50)
  postalcode              String?   @db.VarChar(20)
  zoneid                  String?   @db.VarChar(50)
  vehiclesizelimit        String?   @db.VarChar(10)
  vehiclelengthlimit      Decimal?  @db.Decimal(5, 2)
  vehiclewidthlimit       Decimal?  @db.Decimal(5, 2)
  loadingbayavailable     Boolean?
  liftavailable           Boolean?
  stairsavailable         Boolean?
  narrowdoorways          Boolean?
  parkingdistance         Int?
  preregistrationrequired Boolean?
  accesstimewindowstart   DateTime? @db.Time(6)
  accesstimewindowend     DateTime? @db.Time(6)
  notes                   String?
  specialequipmentneeded  String?
  liftdimensions          String?   @db.VarChar(100)
  zone                    zone?     @relation(fields: [zoneid], references: [zoneid], onDelete: NoAction, onUpdate: NoAction)
  orders                  orders[]
}

model chats {
  chatid        String    @id @db.VarChar(100)
  ordernumber   String?   @db.VarChar(50)
  members       String?
  names         String?
  createdat     DateTime? @db.Timestamp(6)
  lastmessageat DateTime? @db.Timestamp(6)
}

model customer {
  customerid           String    @id @db.VarChar(50)
  name                 String?   @db.VarChar(100)
  displayname          String?   @db.VarChar(100)
  email                String?   @db.VarChar(100)
  phone                String?   @db.VarChar(20)
  address              String?   @db.VarChar(255)
  city                 String?   @db.VarChar(100)
  state                String?   @db.VarChar(100)
  postcode             String?   @db.VarChar(20)
  bio                  String?
  notificationsenabled Boolean?
  createdat            DateTime? @db.Timestamp(6)
  orders               orders[]
}

model employee {
  employeeid             String                   @id @db.VarChar(50)
  name                   String?                  @db.VarChar(100)
  email                  String?                  @db.VarChar(100)
  contact_number         String?                  @db.VarChar(20)
  role                   String?                  @db.VarChar(50)
  active_flag            Boolean?
  displayname            String?                  @db.VarChar(100)
  createdat              DateTime?                @db.Timestamp(6)
  bio                    String?
  employeeteamassignment employeeteamassignment[]
  orders                 orders[]
}

model employeeteamassignment {
  employeeid String   @db.VarChar(50)
  teamid     String   @db.VarChar(50)
  employee   employee @relation(fields: [employeeid], references: [employeeid], onDelete: NoAction, onUpdate: NoAction)
  team       team     @relation(fields: [teamid], references: [teamid], onDelete: NoAction, onUpdate: NoAction)

  @@id([employeeid, teamid])
}

model lorrytrip {
  lorrytripid                          String     @id @db.VarChar(50)
  deliveryteamid                       String?    @db.VarChar(50)
  warehouseteamid                      String?    @db.VarChar(50)
  truckid                              String?    @db.VarChar(50)
  team_lorrytrip_deliveryteamidToteam  team?      @relation("lorrytrip_deliveryteamidToteam", fields: [deliveryteamid], references: [teamid], onDelete: NoAction, onUpdate: NoAction)
  truck                                truck?     @relation(fields: [truckid], references: [truckid], onDelete: NoAction, onUpdate: NoAction)
  team_lorrytrip_warehouseteamidToteam team?      @relation("lorrytrip_warehouseteamidToteam", fields: [warehouseteamid], references: [teamid], onDelete: NoAction, onUpdate: NoAction)
  timeslot                             timeslot[]
}

model orderproduct {
  orderid   String  @db.VarChar(50)
  productid String  @db.VarChar(50)
  quantity  Int?
  orders    orders  @relation(fields: [orderid], references: [orderid], onDelete: NoAction, onUpdate: NoAction)
  product   product @relation(fields: [productid], references: [productid], onDelete: NoAction, onUpdate: NoAction)

  @@id([orderid, productid])
}

model orders {
  orderid                String         @id @db.VarChar(50)
  customerid             String?        @db.VarChar(50)
  employeeid             String?        @db.VarChar(50)
  deliveryteamid         String?        @db.VarChar(50)
  buildingid             String?        @db.VarChar(50)
  timeslotid             String?        @db.VarChar(50)
  numberofattempts       Int?
  scheduledstartdatetime DateTime?      @db.Timestamp(6)
  scheduledenddatetime   DateTime?      @db.Timestamp(6)
  actualstartdatetime    DateTime?      @db.Timestamp(6)
  actualenddatetime      DateTime?      @db.Timestamp(6)
  actualarrivaldatetime  DateTime?      @db.Timestamp(6)
  customerrating         Decimal?       @db.Decimal(3, 1)
  delayreason            String?
  customerfeedback       String?
  proofofdeliveryurl     String?
  orderstatus            String?        @db.VarChar(50)
  updatedat              DateTime?      @db.Timestamp(6)
  createdat              DateTime?      @db.Timestamp(6)
  orderproduct           orderproduct[]
  building               building?      @relation(fields: [buildingid], references: [buildingid], onDelete: NoAction, onUpdate: NoAction)
  customer               customer?      @relation(fields: [customerid], references: [customerid], onDelete: NoAction, onUpdate: NoAction)
  team                   team?          @relation(fields: [deliveryteamid], references: [teamid], onDelete: NoAction, onUpdate: NoAction)
  employee               employee?      @relation(fields: [employeeid], references: [employeeid], onDelete: NoAction, onUpdate: NoAction)
  timeslot               timeslot?      @relation(fields: [timeslotid], references: [timeslotid], onDelete: NoAction, onUpdate: NoAction)
}

model product {
  productid                    String         @id @db.VarChar(50)
  productname                  String?        @db.VarChar(255)
  packagelengthcm              Int?
  packagewidthcm               Int?
  packageheightcm              Int?
  installerteamrequiredflag    Boolean?
  dismantlerequiredflag        Boolean?
  dismantleextratime           Int?
  estimatedinstallationtimemin Int?
  estimatedinstallationtimemax Int?
  fragileflag                  Boolean?
  noliedownflag                Boolean?
  orderproduct                 orderproduct[]
}

model team {
  teamid                                    String                   @id @db.VarChar(50)
  teamtype                                  String?                  @db.VarChar(50)
  employeeteamassignment                    employeeteamassignment[]
  lorrytrip_lorrytrip_deliveryteamidToteam  lorrytrip[]              @relation("lorrytrip_deliveryteamidToteam")
  lorrytrip_lorrytrip_warehouseteamidToteam lorrytrip[]              @relation("lorrytrip_warehouseteamidToteam")
  orders                                    orders[]
}

model timeslot {
  timeslotid      String     @id @db.VarChar(50)
  lorrytripid     String?    @db.VarChar(50)
  date            DateTime?  @db.Date
  timewindowstart DateTime?  @db.Time(6)
  timewindowend   DateTime?  @db.Time(6)
  availableflag   Boolean?
  orders          orders[]
  lorrytrip       lorrytrip? @relation(fields: [lorrytripid], references: [lorrytripid], onDelete: NoAction, onUpdate: NoAction)
}

model truck {
  truckid   String      @id @db.VarChar(50)
  carplate  String?     @db.VarChar(20)
  tone      Int?
  lengthcm  Int?
  widthcm   Int?
  heightcm  Int?
  lorrytrip lorrytrip[]
  truckzone truckzone[]
}

model truckzone {
  truckid       String   @db.VarChar(50)
  zoneid        String   @db.VarChar(50)
  isprimaryzone Boolean?
  truck         truck    @relation(fields: [truckid], references: [truckid], onDelete: NoAction, onUpdate: NoAction)
  zone          zone     @relation(fields: [zoneid], references: [zoneid], onDelete: NoAction, onUpdate: NoAction)

  @@id([truckid, zoneid])
}

model users {
  uid         String    @id @db.VarChar(50)
  name        String?   @db.VarChar(100)
  displayname String?   @db.VarChar(100)
  email       String?   @db.VarChar(100)
  bio         String?
  createdat   DateTime? @db.Timestamp(6)
}

model zone {
  zoneid    String      @id @db.VarChar(50)
  zonename  String?     @db.VarChar(100)
  building  building[]
  truckzone truckzone[]
}
